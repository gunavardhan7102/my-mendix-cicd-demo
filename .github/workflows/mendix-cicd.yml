name: Mendix CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up necessary tools (curl and jq)
      run: |
        sudo apt-get update && sudo apt-get install -y curl jq

    - name: Trigger Mendix Build and Wait for Completion
      id: mendix_build
      run: |
        echo "Starting Mendix build for AppId: ${{ secrets.MENDIX_APP_ID }}"

        BUILD_RESPONSE=$(curl --request POST 'https://deploy.mendix.com/api/1/apps/${{ secrets.MENDIX_APP_ID }}/packages' \
          --header 'Content-Type: application/json' \
          --header 'Mendix-Username: ${{ secrets.MENDIX_USERNAME }}' \
          --header 'Mendix-ApiKey: ${{ secrets.MENDIX_API_KEY }}' \
          --data-raw '{
              "branch": "main",
              "revision": "${{ github.sha }}",
              "version": "1.0.0.0"
          }')
        
        echo "Build triggered. Response: ${BUILD_RESPONSE}"
        
        build_id=$(echo "${BUILD_RESPONSE}" | jq -r '.id')
        
        if [ "$build_id" == "null" ] || [ "$build_id" == "" ]; then
          echo "Failed to start Mendix build. Check the API response for errors."
          exit 1
        fi
        
        echo "build_id=$build_id" >> $GITHUB_OUTPUT
        echo "Build ID is $build_id"
        
        status="BUILDING"
        while [ "$status" != "SUCCEEDED" ] && [ "$status" != "FAILED" ]
        do
          echo "Current build status: $status"
          sleep 10
          build_status_response=$(curl 'https://deploy.mendix.com/api/1/apps/${{ secrets.MENDIX_APP_ID }}/packages/${build_id}' \
            --header 'Mendix-Username: ${{ secrets.MENDIX_USERNAME }}' \
            --header 'Mendix-ApiKey: ${{ secrets.MENDIX_API_KEY }}')
          
          status=$(echo "$build_status_response" | jq -r '.status')
        done
        
        if [ "$status" == "FAILED" ]; then
          echo "Mendix build failed."
          exit 1
        fi

    - name: Deploy to Mendix Free Node
      id: mendix_deploy
      run: |
        build_id=${{ steps.mendix_build.outputs.build_id }}
        echo "Deploying build ID $build_id to Test environment..."
        
        curl --request POST 'https://deploy.mendix.com/api/1/apps/${{ secrets.MENDIX_APP_ID }}/environments/Test/transport' \
          --header 'Content-Type: application/json' \
          --header 'Mendix-Username: ${{ secrets.MENDIX_USERNAME }}' \
          --header 'Mendix-ApiKey: ${{ secrets.MENDIX_API_KEY }}' \
          --data-raw '{
              "packageId": "$build_id"
          }'

    - name: Start Mendix Free Node
      run: |
        echo "Starting Mendix Free Node..."
        
        curl --request POST 'https://deploy.mendix.com/api/1/apps/${{ secrets.MENDIX_APP_ID }}/environments/Test/start' \
          --header 'Content-Type: application/json' \
          --header 'Mendix-Username: ${{ secrets.MENDIX_USERNAME }}' \
          --header 'Mendix-ApiKey: ${{ secrets.MENDIX_API_KEY }}'