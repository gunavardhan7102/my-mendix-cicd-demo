// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package opcuaconnector.actions;

import static java.util.Objects.requireNonNull;
import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;
import org.eclipse.milo.opcua.sdk.client.OpcUaClient;
import org.eclipse.milo.opcua.stack.core.Identifiers;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;
import org.eclipse.milo.opcua.stack.core.types.enumerated.BrowseDirection;
import org.eclipse.milo.opcua.stack.core.types.enumerated.BrowseResultMask;
import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;
import org.eclipse.milo.opcua.stack.core.types.structured.BrowseDescription;
import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResult;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import opcuaconnector.impl.OpcViewServiceSet;
import opcuaconnector.impl.ClientManager;
import opcuaconnector.impl.MxBrowseResponseFactory;
import opcuaconnector.impl.MxLogger;
import opcuaconnector.impl.OpcNode;
import opcuaconnector.proxies.BrowseResponse;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Browse extends CustomJavaAction<IMendixObject>
{
	/** @deprecated use serverConfiguration.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __serverConfiguration;
	private final opcuaconnector.proxies.ServerConfiguration serverConfiguration;
	/** @deprecated use browseDescription.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __browseDescription;
	private final opcuaconnector.proxies.BrowseDescription browseDescription;

	public Browse(
		IContext context,
		IMendixObject _serverConfiguration,
		IMendixObject _browseDescription
	)
	{
		super(context);
		this.__serverConfiguration = _serverConfiguration;
		this.serverConfiguration = _serverConfiguration == null ? null : opcuaconnector.proxies.ServerConfiguration.initialize(getContext(), _serverConfiguration);
		this.__browseDescription = _browseDescription;
		this.browseDescription = _browseDescription == null ? null : opcuaconnector.proxies.BrowseDescription.initialize(getContext(), _browseDescription);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			/**
			 * TO DO: extend the browse action to have multiple NodeIDs as a starting point,
			 * this will make it possible to browse layer by layer.
			 */
			// Validation
			validateMxBrowseDescription();

			// Create connected client
			OpcUaClient opcClient = ClientManager.getInstance().getOrCreateClient(serverConfiguration, getContext())
					.getUaClient();

			// Create opc request
			BrowseDescription opcBrowseDescription = createOpcBrowseDescription(browseDescription);

			// Do request
			BrowseResult opcBrowseResult = new OpcViewServiceSet(opcClient).miloBrowse(opcBrowseDescription);

			// Convert to Mendix Objects
			BrowseResponse mxBrowseResponse = new MxBrowseResponseFactory(opcBrowseResult, getContext())
					.getBrowseResponse();

			// Return Mendix root object
			return mxBrowseResponse.getMendixObject();
		} catch (CoreException e) {
			LOGGER.error("An Error occured while Browsing. The input is: " + browseDescription + ". The error is: "
					+ e.getMessage());
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Browse";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(Browse.class);

	private void validateMxBrowseDescription() {
		requireNonNull(browseDescription);
		requireNonNull(browseDescription.getBrowseDirection());
	}

	private BrowseDescription createOpcBrowseDescription(opcuaconnector.proxies.BrowseDescription mxBrowseDescription)
			throws CoreException {
		NodeId opcNodeId = mxBrowseDescription.getNodeId() != null
				? new OpcNode(mxBrowseDescription.getNodeId()).getOpcNodeId()
				: Identifiers.RootFolder;

		NodeId opcReferenceNodeId = mxBrowseDescription.getNodeIdReferenceTypeID() != null
				? new OpcNode(mxBrowseDescription.getNodeIdReferenceTypeID()).getOpcNodeId()
				: Identifiers.References;

		return new BrowseDescription(opcNodeId, toOpcBrowseDirection(mxBrowseDescription.getBrowseDirection()),
				opcReferenceNodeId, mxBrowseDescription.getIncludeSubTypes(),
				toNodeClassMask(mxBrowseDescription.getNodeClassMask()),
				toResultMask(mxBrowseDescription.getResultMask()));
	}

	private BrowseDirection toOpcBrowseDirection(opcuaconnector.proxies.ENUM_BrowseDirection mxBrowseDirection) {
		switch (mxBrowseDirection) {
		case FORWARD:
			return BrowseDirection.Forward;
		case BOTH:
			return BrowseDirection.Both;
		case INVERSE:
			return BrowseDirection.Inverse;
		case INVALID:
			return BrowseDirection.Invalid;
		default:
			throw new IllegalArgumentException("Cannot create opc Browse description for empty Browse direction.");
		}
	}

	private UInteger toNodeClassMask(Long mxValue) {
		try {
			return UInteger.valueOf(mxValue);
		} catch (Exception e) {
			return uint(NodeClass.DataType.getValue() | NodeClass.Method.getValue()
					| NodeClass.Object.getValue() | NodeClass.ObjectType.getValue() | NodeClass.ReferenceType.getValue()
					| NodeClass.Variable.getValue() | NodeClass.VariableType.getValue() | NodeClass.View.getValue());
		}
	}

	private UInteger toResultMask(Long mxValue) {
		try {
			return UInteger.valueOf(mxValue);
		} catch (Exception e) {
			return uint(BrowseResultMask.All.getValue());
		}
	}
	// END EXTRA CODE
}
